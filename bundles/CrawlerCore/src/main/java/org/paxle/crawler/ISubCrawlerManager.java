/**
 * This file is part of the Paxle project.
 * Visit http://www.paxle.net for more information.
 * Copyright 2007-2009 the original author or authors.
 *
 * Licensed under the terms of the Common Public License 1.0 ("CPL 1.0").
 * Any use, reproduction or distribution of this program constitutes the recipient's acceptance of this agreement.
 * The full license text is available under http://www.opensource.org/licenses/cpl1.0.txt
 * or in the file LICENSE.txt in the root directory of the Paxle distribution.
 *
 * Unless required by applicable law or agreed to in writing, this software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
package org.paxle.crawler;

import java.util.Collection;
import java.util.Map;
import java.util.Set;

public interface ISubCrawlerManager {
	
	/**
	 * @return an unmodifiable collection of all installed {@link ISubCrawler sub-crawlers}
	 */
	public Map<String,ISubCrawler> getSubCrawlers();
	
	/**
	 * @param protocol the crawling-protocol
	 * @return a collection of all available {@link ISubCrawler sub-crawlers} for the protocol
	 */
	public Collection<ISubCrawler> getSubCrawlers(String protocol);
	
	/**
	 * @param protocol the crawling-protocol
	 * @return a {@link ISubCrawler crawler} supporting the given protocol.
	 */
	public ISubCrawler getSubCrawler(String protocol);
	
	/**
	 * @return a list of known but disabled protocols
	 */
	public Set<String> disabledProtocols();
	
	/**
	 * Disable crawling using a given protocol
	 * @param protocol the protocol to disable 
	 */
	public void enableProtocol(String protocol);
	
	/**
	 * Enables crawling using a given protocol
	 * @param protocol the protocol to enable
	 */
	public void disableProtocol(String protocol);
	
	/**
	 * Enables the crawler identified by the given ID
	 * @param service the ID of the crawker as returned by {@link #enabledCrawlers()} or {@link #getCrawlers()}
	 */
	public void enableCrawler(String service);
	
	/**
	 * Disables the crawler identified by the given ID
	 * @param service the ID of the crawler as returned by {@link #enabledCrawlers()} or {@link #getCrawlers()}
	 */
	public void disableCrawler(String service);
	
	/**
	 * @return a set of crawler-ids as generated by this manager from parsers which are currently enabled
	 */
	public Set<String> enabledCrawlers();
	
	/**
	 * @return a set of crawler-ids as generated by this manager
	 */
	public Map<String,Set<String>> getCrawlers();
	
	/**
	 * @return an unmodifiable collection of all protocols supported by the registered {@link ISubCrawler sub-crawlers}
	 * 	This list also includes the {@link #disabledProtocols() disabled protocols}.
	 */
	public Collection<String> getProtocols();
	
	/**
	 * Determines if a given protocol is supported by one of the registered
	 * {@link ISubCrawler sub-crawlers}.
	 * @param protocol the protocol
	 * @return <code>true</code> if the given protocol is supported or <code>false</code> otherwise
	 */
	public boolean isSupported(String protocol);
	
	/**
	 * Releases all resources this {@link ISubParserManager} uses, saves the local state and closes the manager.
	 */
	public void close();
}
