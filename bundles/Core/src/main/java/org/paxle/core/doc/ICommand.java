/**
 * This file is part of the Paxle project.
 * Visit http://www.paxle.net for more information.
 * Copyright 2007-2009 the original author or authors.
 *
 * Licensed under the terms of the Common Public License 1.0 ("CPL 1.0").
 * Any use, reproduction or distribution of this program constitutes the recipient's acceptance of this agreement.
 * The full license text is available under http://www.opensource.org/licenses/cpl1.0.txt
 * or in the file LICENSE.txt in the root directory of the Paxle distribution.
 *
 * Unless required by applicable law or agreed to in writing, this software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
package org.paxle.core.doc;

import java.io.Closeable;
import java.io.IOException;
import java.net.URI;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

import org.paxle.core.queue.IInputQueue;
import org.paxle.core.queue.IOutputQueue;

/**
 * Represents a command-object that is passed to components
 * such as:
 * <ul>
 * 	<li>Core-Crawler</li>
 * 	<li>Core-Parser</li>
 * 	<li>Indexer</li>
 * </ul>
 * 
 * This command is enqueued by a data-provider in the {@link IInputQueue input-queue}
 * of one of the above components. The component processes the {@link ICommand command}
 * and enqueues the modified {@link ICommand command} in the {@link IOutputQueue output-queue}
 * where it is fetched by a data-consumer and written to disk or DB.
 */
public interface ICommand extends Closeable {
	/* =======================================================
	 * General information
	 * ======================================================= */
	public static enum Result {
		Passed,
		Rejected,
		Failure
	};

	public Result getResult();
	public boolean isResult(@Nonnull Result result);
	public String getResultText();
	public void setResultText(@Nullable String description);
	public void setResult(@Nonnull Result result);
	public void setResult(@Nonnull Result result, @Nullable String description);
	
	/**
	 * @return the systemwidth unique ID of this command. 
	 *         This parameter is mainly used by the OR-mapping.
	 */
    public int getOID(); 

    /**
     * @param OID the systemwidth unique ID of this command.
     *        This parameter is generated by the OR-mapping.
     */
    public void setOID(int OID); 
    
    /**
     * @return the ID of the {@link ICommandProfile} this command belongs to.
     * This returns <code>-1</code> if no profile was configured for this command.
     */
    public int getProfileOID();
    
    /**
     * @param profileOID the ID of the {@link ICommandProfile} this command belongs to.
     */
    public void setProfileOID(int profileOID);
	
	/**
	 * Returns the URL as URI
	 * @return the URL
	 */
	public URI getLocation();
	
	/**
	 * Sets the URL
	 * @param location
	 */
	public void setLocation(@Nonnull URI location);
	
	public int getDepth();
	
	public void setDepth(int depth);
	
	
	public @CheckForNull ICrawlerDocument getCrawlerDocument();
	public void setCrawlerDocument(ICrawlerDocument crawlerDoc);	
	
	public @CheckForNull IParserDocument getParserDocument();
	public void setParserDocument(IParserDocument parserDoc);
	
	public @CheckForNull IIndexerDocument[] getIndexerDocuments();
	
	public void setIndexerDocuments(IIndexerDocument[] indexerDocs);
	public void addIndexerDocument(IIndexerDocument indexerDoc);
	
	// TODO: call this method after the ICommand passed through the whole processing
	public void close() throws IOException;	
}
