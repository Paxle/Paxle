<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.paxle</groupId>
	<artifactId>Paxle</artifactId>
	<packaging>pom</packaging>
	<version>0.1.0-SNAPSHOT</version>
	<name>Paxle</name>
	<url>http://www.paxle.net/</url>

	<repositories>
		<repository>
			<id>paxle-repository</id>
			<url>http://maven.repository.paxle.net</url>
		</repository>
		<repository>
			<id>java.net</id>
			<url>http://download.java.net/maven/2</url>
		</repository>
		<repository>
			<id>apache.snapshots</id>
			<name>Apache Snapshot Repository</name>
			<url>http://people.apache.org/repo/m2-snapshot-repository</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>akathist-repository</id>
			<name>Akathist Repository</name>
			<url>http://www.9stmaryrd.com/maven</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases </name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>		
	</repositories>

	<pluginRepositories>
		<!-- 
			Plugin Repository required by the launch4j plugin
		 -->	
		<pluginRepository>
			<id>akathist-repository</id>
			<name>Akathist Repository</name>
			<url>http://www.9stmaryrd.com/maven</url>
		</pluginRepository>
		
		<!-- 
			Plugin Repository required by the upload plugin
		 -->
		<pluginRepository>
			<id>atlassian-repository</id>
			<name>Atlassian Repository</name>
			<url>http://repository.atlassian.com/maven2/</url>
		</pluginRepository>
		
		<!-- 
			Plugin Repository required by the license plugin
		 -->		
		<pluginRepository>
			<id>mc-release</id>
			<name>Local Maven repository of releases</name>
			<url>http://mc-repo.googlecode.com/svn/maven2/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>		
	</pluginRepositories>

	<properties>
		<!-- Eclipse Equinox related Properties -->
		<equinox.dependencies>target/dependency/equinox</equinox.dependencies>
		<equinox.runtime.jar>org.eclipse.osgi_3.4.0.v20080605-1900.jar</equinox.runtime.jar>
		<equinox.bundledir>bundles</equinox.bundledir>
		
		<!-- Apache Felix related Properties -->
		<felix.dependencies>target/dependency/felix</felix.dependencies>
	</properties>

	<licenses>
		<license>
			<name>CPL 1.0</name>
			<url>http://www.opensource.org/licenses/cpl1.0.txt</url>
			<distribution>repo</distribution>
			<comments>Ask if you need an alternative license.</comments>
		</license>
	</licenses>
	
	<distributionManagement>
		<snapshotRepository>
			<id>paxle-snapshot-repository</id>
			<url>${mvn-deploy-url}</url>
		</snapshotRepository>
	
<!--		<repository>-->
<!--			<id>paxle-release-repository</id>-->
<!--			<url>scpexe://tantal.xenim.de:2066/home/users/theli/osgi/m2/</url>-->
<!--		</repository>-->
	</distributionManagement>

	<scm>
		<url>http://svn.paxle.net/</url>
	</scm>

	<!-- plugin settings -->
	<build>
	    <pluginManagement>
	    	<plugins>
	    		<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.0</version>
	    		</plugin>
	    		<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.2-beta-2</version>
	    		</plugin>
	    		<plugin>
	    			<groupId>com.atlassian.maven.plugins</groupId>
	    			<artifactId>maven-upload-plugin</artifactId>
	    			<version>1.1</version>
	    		</plugin>
	    		<plugin>
	    			<groupId>org.codehaus.izpack</groupId>
	    			<artifactId>izpack-maven-plugin</artifactId>
	    			<version>1.0-alpha-3</version>
	    		</plugin>
	    		<plugin>
	    			<groupId>org.codehaus.mojo</groupId>
	    			<artifactId>build-helper-maven-plugin</artifactId>
	    			<version>1.2</version>
	    		</plugin>
	    		<plugin>
	    			<groupId>org.apache.maven.plugins</groupId>
	    			<artifactId>maven-eclipse-plugin</artifactId>
	    			<version>2.5.1</version>
	    		</plugin>
	    		<plugin>
	    			<groupId>org.apache.maven.plugins</groupId>
	    			<artifactId>maven-antrun-plugin</artifactId>
	    			<version>1.3</version>
	    		</plugin>
	    		<plugin>	    			
					<groupId>com.akathist.maven.plugins.launch4j</groupId>
					<artifactId>launch4j-maven-plugin</artifactId>
					<version>1.1-SNAPSHOT</version>
					<!-- XXX we need to change the version of foxtrot because version 2.0 seems 
					     not to be available in a maven repository at the moment:
					     
					     See: 
							[ERROR] BUILD ERROR
							[INFO] Failed to resolve artifact.
							
							Missing:
							1) foxtrot:foxtrot:jar:3.0
					     
					-->
					<dependencies>
						<dependency>
							<groupId>foxtrot</groupId>
							<artifactId>foxtrot</artifactId>
							<version>2.0</version>
						</dependency>
					</dependencies>					
	    		</plugin>
				<plugin>
		        	<groupId>com.google.code.maven-license-plugin</groupId>
		        	<artifactId>maven-license-plugin</artifactId>
		        	<version>1.3.2</version>				
				</plugin>	    		
	    	</plugins>
	    </pluginManagement>

	    <plugins>
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-eclipse-plugin</artifactId>
			    <configuration>
			        <!-- Workaround for http://jira.codehaus.org/browse/MECLIPSE-94 [^] -->
			        <eclipseProjectDir>..</eclipseProjectDir>
			    </configuration>
			</plugin>

			<plugin>
				<groupId>com.google.code.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<configuration>
					<header>../Paxle/LICENSE-HEADER.txt</header>
					<properties>
						<inceptionYear>${project.inceptionYear}</inceptionYear>
						<year>2008</year>
					</properties>
					<includes>
						<include>**/*.sh</include>
					</includes>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<!-- ==================================================================-->
							<!-- ECLIPSE EQUINOX - Dependencies                                    -->
							<!-- ==================================================================-->
							<artifactItems>
								<!-- equinox system bundle -->
								<artifactItem>
									<groupId>org.eclipse.osgi</groupId>
									<artifactId>osgi</artifactId>
									<version>3.4.0.v20080605-1900</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>${equinox.runtime.jar}</destFileName>
								</artifactItem>

								<artifactItem>
									<groupId>org.eclipse.osgi</groupId>
									<artifactId>services</artifactId>									
									<version>3.1.200.v20071203</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.eclipse.osgi.services_3.1.200.v20071203.jar</destFileName>
								</artifactItem>

								<artifactItem>
									<groupId>org.eclipse.equinox</groupId>
									<artifactId>common</artifactId>
									<version>3.4.0.v20080421-2006</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.eclipse.equinox.common_3.4.0.v20080421-2006.jar</destFileName>
								</artifactItem>

								<artifactItem>
									<groupId>org.eclipse.equinox</groupId>
									<artifactId>preferences</artifactId>
									<version>3.2.200.v20080421-2006</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.eclipse.equinox.preferences_3.2.200.v20080421-2006.jar</destFileName>
								</artifactItem>

								<artifactItem>
									<groupId>org.eclipse.equinox</groupId>
									<artifactId>log</artifactId>
									<version>1.1.0.v20080414</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.eclipse.equinox.log_1.1.0.v20080414.jar</destFileName>
								</artifactItem>
								
								<artifactItem>
									<groupId>org.eclipse.equinox</groupId>
									<artifactId>event</artifactId>
									<version>1.1.0.v20080225</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.eclipse.equinox.event_1.1.0.v20080225.jar</destFileName>
								</artifactItem>								
																					
								<artifactItem>
									<groupId>org.eclipse.equinox</groupId>
									<artifactId>cm</artifactId>
									<version>1.0.0.v20080509-1800</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.eclipse.equinox.cm_1.0.0.v20080509-1800.jar</destFileName>
								</artifactItem>	
								
								<artifactItem>
									<groupId>org.eclipse.equinox</groupId>
									<artifactId>metatype</artifactId>
									<version>1.0.0.v20070827</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.eclipse.equinox.metatype_1.0.0.v20070827.jar</destFileName>
								</artifactItem>		
								
								<!-- 
									 A patched version of the useradmin bundle including 
								     a patch from: https://bugs.eclipse.org/bugs/show_bug.cgi?id=241663
								-->
								<artifactItem>
									<groupId>org.eclipse.equinox</groupId>
									<artifactId>useradmin</artifactId>
									<version>1.1.100.200810030655</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.eclipse.equinox.useradmin_1.1.100.200810030655.jar</destFileName>
								</artifactItem>																											
																								
								<!-- jetty based HTTP service -->
								<artifactItem>
									<groupId>org.eclipse.equinox</groupId>
									<artifactId>http.jetty</artifactId>
									<version>1.1.0.v20080425</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.eclipse.equinox.http.jetty_1.1.0.v20080425.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.equinox</groupId>
									<artifactId>http.servlet</artifactId>
									<version>1.0.100.v20080427-0830</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.eclipse.equinox.http.servlet_1.0.100.v20080427-0830.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>org.mortbay.jetty</groupId>
									<artifactId>jetty</artifactId>
									<version>5.1.14.v200806031611</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.mortbay.jetty_5.1.14.v200806031611.jar</destFileName>
								</artifactItem>		
								
								<artifactItem>
									<groupId>javax</groupId>
									<artifactId>servlet</artifactId>
									<version>2.4.0.v200806031604</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>javax.servlet_2.4.0.v200806031604.jar</destFileName>
								</artifactItem>

								<!-- 
									OSGI Monitor Admin Service
									
									- Currently there is only an implementation of Apache felix available
									- We have compiled and deployed this on our own from 
									  http://svn.apache.org/repos/asf/felix/sandbox/donsez/monitoradmin
									  SVN Rev.: 555399
									  Last Changed: 2007-07-11 23:08:51 +0200 (Mit, 11 Jul 2007)
								 -->
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.sandbox.monitor</artifactId>
									<version>0.9.0-incubator</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.apache.felix.sandbox.monitor-0.9.0-incubator.jar</destFileName>
								</artifactItem>

								<!-- commons-logging over slf4j -->
								<artifactItem>
									<groupId>org.slf4j</groupId>
									<artifactId>jcl-over-slf4j</artifactId>
									<version>1.5.5</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>jcl-over-slf4j-1.5.5.jar</destFileName>
								</artifactItem>

								<!-- pass slf4j logging to log4j -->
								<artifactItem>
									<groupId>org.slf4j</groupId>
									<artifactId>slf4j-log4j12</artifactId>
									<version>1.5.5</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>slf4j-log4j12-1.5.5.jar</destFileName>
								</artifactItem>
								
								<!--  slf4j api -->
								<artifactItem>
									<groupId>org.slf4j</groupId>
									<artifactId>slf4j-api</artifactId>
									<version>1.5.5</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>slf4j-api-1.5.5.jar</destFileName>
								</artifactItem>		
								
								<!-- log4j dependency -->
								<artifactItem>
									<groupId>org.apache.log4j</groupId>
									<artifactId>log4j-osgi</artifactId>
									<version>1.2.13.v200706111418</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>log4j-osgi-1.2.13.v200706111418.jar</destFileName>
								</artifactItem>								
								
								<!-- Apache commons pool dependencies -->
								<artifactItem>
									<groupId>commons-pool</groupId>
									<artifactId>commons-pool</artifactId>
									<version>1.4</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.pool_1.4.jar</destFileName>
								</artifactItem>								

								<!-- Apache commons collection dependencies -->
								<artifactItem>
									<groupId>commons-collections</groupId>
									<artifactId>commons-collections</artifactId>
									<version>3.2.1</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.collections_3.2.1.jar</destFileName>
								</artifactItem>		
								
								<!-- Apache commons IO dependencies -->
								<artifactItem>
									<groupId>commons-io</groupId>
									<artifactId>commons-io</artifactId>
									<version>1.4</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.io_1.4.jar</destFileName>
								</artifactItem>
								
								<!-- Apache commons fileupload dependencies -->
								<artifactItem>
									<groupId>commons-fileupload</groupId>
									<artifactId>commons-fileupload</artifactId>
									<version>1.2.1</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.fileupload_1.2.1.jar</destFileName>
								</artifactItem>
								
								<!-- Apache commons Lang dependencies -->
								<artifactItem>
									<groupId>commons-lang</groupId>
									<artifactId>commons-lang</artifactId>
									<version>2.4</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.lang_2.4.jar</destFileName>
								</artifactItem>		
								
								<!-- Apache commons beanutils dependencies -->																													
								<artifactItem>
									<groupId>org.apache.commons</groupId>
									<artifactId>com.springsource.org.apache.commons.beanutils</artifactId>
									<version>1.7.0</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>com.springsource.org.apache.commons.beanutils_1.7.0.jar</destFileName>
								</artifactItem>

								<!-- HTTP Client dependencies -->
								<artifactItem>
									<groupId>commons-httpclient</groupId>
									<artifactId>commons-httpclient-osgi</artifactId>
									<version>3.1.0.v200712051435</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.httpclient_3.1.0.v200712051435.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>commons-codec</groupId>
									<artifactId>commons-codec-osgi</artifactId>
									<version>1.2.0.v200711021015</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.codec_1.2.0.v200711021015.jar</destFileName>
								</artifactItem>								

								<!-- DB4O -->
								<artifactItem>
									<groupId>com.db4o</groupId>
									<artifactId>db4o-osgi</artifactId>
									<version>7.5.57.11498</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>db4o-osgi-7.5.57.11498.jar</destFileName>
								</artifactItem>		

								<!-- Ehcache dependencies -->
								<artifactItem>
									<groupId>net.sourceforge.ehcache</groupId>
									<artifactId>com.springsource.net.sf.ehcache</artifactId>
									<version>1.4.1</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>com.springsource.net.sf.ehcache-1.4.1.jar</destFileName>									
								</artifactItem>
								<artifactItem>
									<groupId>net.sourceforge.jsr107cache</groupId>
									<artifactId>com.springsource.net.sf.jsr107cache</artifactId>
									<version>1.0.0</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>com.springsource.net.sf.jsr107cache-1.0.0.jar</destFileName>										
								</artifactItem>
								<artifactItem>
									<groupId>edu.emory.mathcs.backport</groupId>
									<artifactId>com.springsource.edu.emory.mathcs.backport</artifactId>
									<version>3.1.0</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>com.springsource.edu.emory.mathcs.backport-3.1.0.jar</destFileName>										
								</artifactItem>
								
								<!-- Bloomfilter dependencies -->
								<artifactItem>
									<groupId>org.onelab.filter</groupId>
									<artifactId>bloomfilter</artifactId>
									<version>1.0</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.onelab.filter.bloomfilter-1.0.jar</destFileName>
								</artifactItem>

								<!-- JFreeChart dependencies -->
								<artifactItem>
									<groupId>org.jfree.chart</groupId>
									<artifactId>com.springsource.org.jfree.chart</artifactId>
									<version>1.0.9</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>com.springsource.org.jfree.chart-1.0.9.jar</destFileName>										
								</artifactItem>				
								<artifactItem>
									<groupId>org.jfree</groupId>
									<artifactId>com.springsource.org.jfree</artifactId>
									<version>1.0.12</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>com.springsource.org.jfree-1.0.9.jar</destFileName>										
								</artifactItem>
								
								<artifactItem>
									<groupId>org.karlchenofhell</groupId>
									<artifactId>swf</artifactId>
									<version>0.1</version>
									<outputDirectory>${equinox.dependencies}</outputDirectory>
									<destFileName>org.karlchenofhell.swf-0.1.jar</destFileName>
								</artifactItem>												

								<!-- ==================================================================-->
								<!-- APACHE FELIX - Dependencies                                       -->
								<!-- ==================================================================-->
								<!-- 
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.main</artifactId>
									<version>1.0.3</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.framework</artifactId>
									<version>1.0.3</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.shell</artifactId>
									<version>1.0.0</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.bundlerepository</artifactId>
									<version>1.0.2</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.shell.tui</artifactId>
									<version>1.0.0</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.shell.tui</artifactId>
									<version>1.0.0</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.osgi.core</artifactId>
									<version>1.0.0</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.osgi.compendium</artifactId>
									<version>1.0.0</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.configadmin</artifactId>
									<version>1.0.1</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>
								
								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.metatype</artifactId>
									<version>1.0.0</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>								

								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.eventadmin</artifactId>
									<version>1.0.0</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>org.apache.felix.http.jetty</artifactId>
									<version>0.9.0-SNAPSHOT</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.apache.commons.logging</groupId>
									<artifactId>commons-logging-osgi</artifactId>
									<version>1.0.4.v200706111724</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.logging_1.0.4.v200706111724.jar</destFileName>
								</artifactItem>

								<artifactItem>
									<groupId>org.apache.felix</groupId>
									<artifactId>javax.servlet</artifactId>
									<version>1.0.0</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>commons-pool</groupId>
									<artifactId>commons-pool</artifactId>
									<version>1.4</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.pool_1.4.jar</destFileName>
								</artifactItem>								

								<artifactItem>
									<groupId>commons-collections</groupId>
									<artifactId>commons-collections</artifactId>
									<version>3.2.1</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.collections_3.2.1.jar</destFileName>
								</artifactItem>
								
								<artifactItem>
									<groupId>commons-io</groupId>
									<artifactId>commons-io</artifactId>
									<version>1.4</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.io_1.4.jar</destFileName>
								</artifactItem>
								
								<artifactItem>
									<groupId>commons-fileupload</groupId>
									<artifactId>commons-fileupload</artifactId>
									<version>1.2.1</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.fileupload_1.2.1.jar</destFileName>
								</artifactItem>
								
								<artifactItem>
									<groupId>commons-lang</groupId>
									<artifactId>commons-lang</artifactId>
									<version>2.4</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.lang_2.4.jar</destFileName>
								</artifactItem>															

								<artifactItem>
									<groupId>commons-httpclient</groupId>
									<artifactId>commons-httpclient-osgi</artifactId>
									<version>3.1.0.v200712051435</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.httpclient_3.1.0.v200712051435.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>commons-codec</groupId>
									<artifactId>commons-codec-osgi</artifactId>
									<version>1.2.0.v200711021015</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>org.apache.commons.codec_1.2.0.v200711021015.jar</destFileName>
								</artifactItem>
								
								<artifactItem>
									<groupId>com.db4o</groupId>
									<artifactId>db4o-osgi</artifactId>
									<version>7.4.58.11547</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>db4o-osgi-7.4.58.11547.jar</destFileName>
								</artifactItem>										
								
								<artifactItem>
									<groupId>net.sourceforge.ehcache</groupId>
									<artifactId>com.springsource.net.sf.ehcache</artifactId>
									<version>1.4.1</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>com.springsource.net.sf.ehcache-1.4.1.jar</destFileName>									
								</artifactItem>
								<artifactItem>
									<groupId>net.sourceforge.jsr107cache</groupId>
									<artifactId>com.springsource.net.sf.jsr107cache</artifactId>
									<version>1.0.0</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>com.springsource.net.sf.jsr107cache-1.0.0.jar</destFileName>										
								</artifactItem>
								<artifactItem>
									<groupId>edu.emory.mathcs.backport</groupId>
									<artifactId>com.springsource.edu.emory.mathcs.backport</artifactId>
									<version>3.1.0</version>
									<outputDirectory>${felix.dependencies}</outputDirectory>
									<destFileName>com.springsource.edu.emory.mathcs.backport-3.1.0.jar</destFileName>										
								</artifactItem>
								-->
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- JRE 6.0 modules -->
		<profile>
			<id>jdk1.6-profile</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<jdk>1.6</jdk>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>webinstaller-copy-jdk6-fragment</id>
								<phase>package</phase>
								<configuration>
									<tasks>
										<echo message="Copying IZPack-fragment for jdk6-profile ..." />
										<copy file="${basedir}/src/main/resources/installers/fragments/jdk6.xml" 
										      todir="${basedir}/target/webinstaller/fragments/"/>
									</tasks>
								</configuration>
								<goals><goal>run</goal></goals>
							</execution>
						</executions>
					</plugin>					
				</plugins>
			</build>

			<modules>
				<module>../DIJre6Backend</module>
			</modules>
		</profile>

		<!-- Profile to build all Parsers -->
		<profile>
			<id>all-parsers-profile</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>parsers</name>
				</property>	
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>webinstaller-copy-parser-fragment</id>
								<phase>package</phase>
								<configuration>
									<tasks>
										<echo message="Copying IZPack-fragment for parsers-profile ..." />
										<copy file="${basedir}/src/main/resources/installers/fragments/parsers.xml" 
										      todir="${basedir}/target/webinstaller/fragments/"/>
									</tasks>
								</configuration>
								<goals><goal>run</goal></goals>
							</execution>
						</executions>
					</plugin>					
				</plugins>
			</build>

			<modules>
				<module>../ParserGzip</module>
				<module>../ParserPdf</module>
				<module>../ParserZip</module>
				<module>../Parser7zip</module>
				<module>../ParserBzip2</module>
				<module>../ParserTar</module>
				<module>../ParserLha</module>
				<module>../ParserMsOffice</module>
				<module>../ParserFeed</module>
				<module>../ParserXbel</module>
				<module>../ParserSitemap</module>
				<module>../ParserSWF</module>
			</modules>			
		</profile>
		
		<!-- Profile to build all Parsers -->
		<profile>
			<id>all-crawlers-profile</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>crawlers</name>
				</property>	
			</activation>
			
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>webinstaller-copy-crawlers-fragment</id>
								<phase>package</phase>
								<configuration>
									<tasks>
										<echo message="Copying IZPack-fragment for crawlers-profile ..." />
										<copy file="${basedir}/src/main/resources/installers/fragments/crawlers.xml" 
										      todir="${basedir}/target/webinstaller/fragments/"/>
									</tasks>
								</configuration>
								<goals><goal>run</goal></goals>
							</execution>
						</executions>
					</plugin>					
				</plugins>
			</build>

			<modules>
				<!-- paxle crawler bundles -->
				<module>../CrawlerFtp</module>
				<module>../CrawlerSmb</module>
				<module>../CrawlerProxyHttp</module>
			</modules>			
		</profile>

		<!-- Profile to build all other bundles -->
		<profile>
			<id>all-others-profile</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>others</name>
				</property>	
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>webinstaller-copy-others-fragment</id>
								<phase>package</phase>
								<configuration>
									<tasks>
										<echo message="Copying IZPack-fragment for others-profile ..." />
										<copy file="${basedir}/src/main/resources/installers/fragments/others.xml" 
										      todir="${basedir}/target/webinstaller/fragments/"/>
									</tasks>
								</configuration>
								<goals><goal>run</goal></goals>
							</execution>
						</executions>
					</plugin>					
				</plugins>
			</build>

			<modules>
				<!-- paxle tool bundles -->
				<module>../CryptUtils</module>
	
				<!-- Optional DL bundles -->
				<module>../DataLayerMySQL</module>
				<module>../DataLayerPostgreSQL</module>

				<!-- GUI Addons -->
				<module>../GuiOpenID</module>
				<module>../IconTools</module>
				<module>../IPLocatorTools</module>

				<!-- Optional SE bundles -->
				<module>../SEProviderRssSearch</module>	

				<!-- Optional Filter bundles -->
				<module>../FilterPlaintextDumper</module>
				<module>../FilterForum</module>
				<module>../ToolsDNS</module>

				<!-- Optional DI addons -->
				<module>../DIAddonLuke</module>

				<!-- Misc -->
				<module>../Console</module>
				<module>../Dbus</module>			
			</modules>			
		</profile>

		<!--  debug profile -->
		<profile>
			<id>debug-profile</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>debug</name>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<inherited>false</inherited>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/debug.xml</descriptor>
							</descriptors>
							<outputDirectory>../</outputDirectory>
							<workDirectory>target/assembly/debug</workDirectory>
							<finalName>/Debug</finalName>
							<ignoreDirFormatExtensions>true</ignoreDirFormatExtensions>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
						<executions>
							<execution>
								<id>make-debug-assembly</id>
								<phase>install</phase>
								<goals>
									<goal>directory-single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--  release profile [DEFAULT] -->
		<profile>
			<id>installer-profile</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>!debug</name>
				</property>
			</activation>
			
			<modules>
				<module>../Root</module>
			</modules>			
			
			<build>
			    <plugins>
					<!-- ==================================================================-->
					<!-- RELEASE - FILES                                                   -->
					<!-- ==================================================================-->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<inherited>false</inherited>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>install</phase>
								<goals>
									<goal>attached</goal>
								</goals>
								<configuration>
									<descriptors>
										<!-- an assembly containing all bundles -->
										<descriptor>src/main/assembly/bundles.xml</descriptor>
										
										<!-- an assembly containing all paxle-core-bundles and equinox bundles -->
										<descriptor>src/main/assembly/installer_basic.xml</descriptor>
										
										<!-- an assembly containing all paxle-core-bundles and felix bundles -->
										<!-- 
											<descriptor>src/main/assembly/felix.xml</descriptor>
										 -->
									</descriptors>
									<outputDirectory>target</outputDirectory>
									<workDirectory>target/assembly/work</workDirectory>
								</configuration>								
							</execution>
						</executions>
					</plugin>				

					<!-- ==================================================================-->
					<!-- INSTALLER - JAVA                                                  -->
					<!-- java based installer for paxle                                    -->
					<!-- ==================================================================-->
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>make-java-installer-unzip</id>
								<phase>install</phase>
								<configuration>
									<tasks>
										<echo message="${basedir}" />
										<untar compression="gzip" src="target/${pom.artifactId}-${pom.version}-equinox.tar.gz" dest="target/izpack" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>make-java-installer</id>
								<phase>install</phase>
								<goals>
									<goal>izpack</goal>
								</goals>
								<configuration>
									<!-- <izpackBasedir>${your.staging.dir}</izpackBasedir>-->
									<descriptor>${basedir}/src/main/resources/installers/basicinstaller.xml</descriptor>
									<installerFile>target/${pom.artifactId}-${pom.version}-installer.jar</installerFile>
									<kind>standard</kind>
								</configuration>
							</execution>
						</executions>
					</plugin>


					<!-- ==================================================================-->
					<!-- INSTALLER - EXE                                                   -->
					<!-- a plugin to generate an exe file from the jar-installer           -->
					<!-- generated above                                                   -->
					<!-- ==================================================================-->
					<plugin>
						<groupId>com.akathist.maven.plugins.launch4j</groupId>
						<artifactId>launch4j-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>make-exe-windows</id>
								<phase>package</phase>
								<goals>
									<goal>launch4j</goal>
								</goals>
								<configuration>
									<headerType>gui</headerType>
									<stayAlive>true</stayAlive>									
									<jar>${equinox.dependencies}/${equinox.runtime.jar}</jar>
									<outfile>${equinox.dependencies}/start.exe</outfile>
									<cmdLine></cmdLine>
									<dontWrapJar>false</dontWrapJar>
									<icon>src/main/resources/img/icon.ico</icon>								
									<splash>
										<file>src/main/resources/img/logo.bmp</file>
										<waitForWindow>true</waitForWindow>
										<timeout>20</timeout>
									</splash>
									<jre>
										<minVersion>1.5.0</minVersion>
									</jre>
								</configuration>
							</execution>						
						
							<execution>
								<id>make-exe-installer</id>
								<phase>install</phase>
								<goals>
									<goal>launch4j</goal>
								</goals>
								<configuration>
									<headerType>gui</headerType>
									<outfile>target/${pom.artifactId}-${pom.version}-installer.exe</outfile>
									<jar>target/${pom.artifactId}-${pom.version}-installer.jar</jar>
									<dontWrapJar>false</dontWrapJar>
									<icon>src/main/resources/img/icon.ico</icon>
									<classPath>
										<mainClass>com.izforge.izpack.installer.Installer</mainClass>
										<addDependencies>false</addDependencies>
										<preCp>anything</preCp>
									</classPath>
									<jre>
										<minVersion>1.5.0</minVersion>
									</jre>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- add the installers to the projects artifacts list so that they can be deployed-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>installer-attach-artifacts</id>
								<phase>install</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>target/${pom.artifactId}-${pom.version}-installer.jar</file>
											<classifier>installer</classifier>
											<type>jar</type>
										</artifact>
										<artifact>
											<file>target/${pom.artifactId}-${pom.version}-installer.exe</file>
											<classifier>installer</classifier>
											<type>exe</type>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<!-- ====================================================================
		     WEB-INSTALLER PROFILE                                           
		     Example Call:
			mvn -Dwebinstaller \
			    -DwebinstallerURL=http://snapshots.mvn.repos.pxl.li/webinstaller \
			    -DwebinstallerUploadURL=file:///mnt/paxle_repos/webinstaller \
			    clean install
		     ==================================================================== -->
		<profile>
			<id>webinstaller-profile</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>webinstaller</name>
				</property>
			</activation>

			<properties>
				<webinstaller.url>${webinstallerURL}</webinstaller.url>
				<webinstaller.upload.url>${webinstallerUploadURL}</webinstaller.upload.url>
			</properties>

			<build>
				<plugins>
					<!-- collect all required files -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<inherited>false</inherited>
						<executions>
							<execution>
								<id>webinstaller-assembly</id>
								<phase>install</phase>
								<goals>
									<goal>directory-inline</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/main/assembly/installer_web_core.xml</descriptor>
										<descriptor>src/main/assembly/installer_web_packs.xml</descriptor>
									</descriptors>
									
									<!-- copy files to  Paxle/target/installer/ -->
									<outputDirectory>${basedir}/target/</outputDirectory>
									<finalName>/webinstaller/</finalName>
									<ignoreDirFormatExtensions>true</ignoreDirFormatExtensions>	
									<appendAssemblyId>false</appendAssemblyId>							
		
									<!-- temp woring dir -->
									<workDirectory>target/assembly/webinstaller</workDirectory>					
								</configuration>								
							</execution>
						</executions>
					</plugin>				
				
					<!-- build the installer jars -->
					<plugin>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>webinstaller-izpack</id>
								<phase>install</phase>
								<goals>
									<goal>izpack</goal>
								</goals>
								<configuration>
									<attach>false</attach>
									<izpackBasedir>target/webinstaller/temp</izpackBasedir>
									<descriptor>${basedir}/src/main/resources/installers/webinstaller.xml</descriptor>
									<installerFile>target/webinstaller/dist/${pom.artifactId}-${pom.version}-webinstaller.jar</installerFile>
									<kind>web</kind>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- building an installer exe -->
					<plugin>
						<groupId>com.akathist.maven.plugins.launch4j</groupId>
						<artifactId>launch4j-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>webinstaller-exe</id>
								<phase>install</phase>
								<goals>
									<goal>launch4j</goal>
								</goals>
								<configuration>
									<headerType>gui</headerType>
									<outfile>target/webinstaller/dist/${pom.artifactId}-${pom.version}-webinstaller.exe</outfile>
									<jar>target/webinstaller/dist/${pom.artifactId}-${pom.version}-webinstaller.jar</jar>
									<dontWrapJar>false</dontWrapJar>
									<icon>src/main/resources/img/icon.ico</icon>
									<classPath>
										<mainClass>com.izforge.izpack.installer.Installer</mainClass>
										<addDependencies>false</addDependencies>
										<preCp>anything</preCp>
									</classPath>
									<jre>
										<minVersion>1.5.0</minVersion>
									</jre>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Upload the installer jars -->
					<plugin>
						<groupId>com.atlassian.maven.plugins</groupId>
						<artifactId>maven-upload-plugin</artifactId>
						<executions>
							<execution>
								<id>webinstaller-upload</id>
								<phase>install</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
		                            <resourceSrc>${project.build.directory}/webinstaller/dist/*</resourceSrc>
		                            <resourceDest />
		                            <serverId>webinstall-server</serverId>
		                            <url>${webinstaller.upload.url}</url>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>		
	</profiles>

	<!-- define default modules -->
	<modules>
		<!-- paxle core bundle  -->
		<module>../Core</module>
		
		<!-- paxle crawler bundles -->
		<module>../CrawlerCore</module>
		<module>../CrawlerHttp</module>
		
		<!-- paxle parser bundles -->
		<module>../ParserCore</module>
		<module>../ParserPlain</module>
		<module>../ParserHtml</module>
		
		<!-- search engine bundles -->
		<module>../SearchEngine</module>
		<module>../SEProviderPaxleInfrastructure</module>
		
		<!-- indexer bundles -->
		<module>../Indexer</module>
		<module>../IndexLucene</module>

		<!-- some tools -->
		<module>../CharsetDetector</module>
		<module>../MimeType</module>
		<module>../ToolsIExport</module>
		<module>../ToolsSysMon</module>
		
		<!-- datalayer bundles -->
		<module>../DataLayer</module>
		<module>../DataLayerDerby</module>
		<module>../DataLayerH2</module>	
		
		<!-- some filters -->
		<module>../FilterBlacklist</module>
		<module>../FilterRobotsTxt</module>
		<module>../FilterLanguageIdentification</module>
		
		<!-- GUI bundle -->
		<module>../GUI</module>		
		
		<!-- Desktop Integration -->
		<module>../DesktopIntegration</module>
		<module>../DIJdicBackend</module>
				
	</modules>
</project>
