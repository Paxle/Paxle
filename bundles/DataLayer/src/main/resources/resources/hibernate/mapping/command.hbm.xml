<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-lazy="false">
    <class name="org.paxle.core.queue.ICommand" table="Command" node="Command" lazy="false">
        <id name="OID" column="id" node="@oid">
            <generator class="native"/>          
        </id>      
        
        <!-- the command processing result -->
        <property name="result" node="Result/Code">
			<type name="org.paxle.data.db.impl.EnumUserType">
				<param name="enumClassName">org.paxle.core.queue.ICommand$Result</param>
			</type>
      	</property>
      	<property name="resultText" node="Result/Text"/>        
      	
      	<!-- the resource location -->
    	<property name="location" node="Location" length="512"/>
        
        <!-- the crawler document -->
	    <many-to-one name="crawlerDocument" column="crawlerDocId" unique="true" cascade="all" embed-xml="true"/>
	    
	    <!-- the parser document -->
	    <many-to-one name="parserDocument" column="parserDocId" unique="true" cascade="all" embed-xml="true"/>
	    
	    <array name="IndexerDocuments" cascade="all" embed-xml="true">
      		<key column="commandId"/>
      		<list-index column="indexerDocIdx"/>
      		<one-to-many class="org.paxle.core.doc.IIndexerDocument"/>
    	</array>
    </class>
    
    <query name="fromCrawlerQueue"><![CDATA[
		FROM ICommand as cmd WHERE (cmd.result = 'Passed') AND (cmd.resultText is null) AND (cmd.crawlerDocument is null)
	]]></query>

    <query name="fromParserQueue"><![CDATA[
		FROM ICommand as cmd WHERE (cmd.result = 'Passed') AND (cmd.crawlerDocument is not null) AND (cmd.parserDocument is null)
	]]></query>
	
    <query name="fromIndexerQueue"><![CDATA[	
		FROM ICommand as cmd LEFT JOIN cmd.IndexerDocuments as indexerDoc WHERE (cmd.parserDocument is not null) AND (indexerDoc is null)
	]]></query>
		
</hibernate-mapping>