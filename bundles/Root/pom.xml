<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.paxle</groupId>
	<artifactId>Root</artifactId>
	<packaging>pom</packaging>
	<version>0.1.1-SNAPSHOT</version>
	<name>Paxle - Root</name>
	<url>http://www.paxle.net/</url>
	<inceptionYear>2007</inceptionYear>

	<repositories>
		<repository>
			<id>paxle-repository</id>
			<url>http://maven.repository.paxle.net</url>
		</repository>
		<repository>
			<id>java.net</id>
			<url>http://download.java.net/maven/2</url>
		</repository>
		<repository>
			<id>apache.snapshots</id>
			<name>Apache Snapshot Repository</name>
			<url>http://people.apache.org/repo/m2-snapshot-repository</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases </name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>maven2-repository.dev.java.net</id>
			<url>http://download.java.net/maven/2</url>
		</pluginRepository>
		<pluginRepository>
			<id>snapshots.repository.codehaus.org</id>
			<url>http://snapshots.repository.codehaus.org/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>mc-release</id>
			<name>Local Maven repository of releases</name>
			<url>http://mc-repo.googlecode.com/svn/maven2/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<equinox.dependencies>target/dependency/equinox</equinox.dependencies>
		<equinox.bundledir>bundles</equinox.bundledir>
		<felix.dependencies>target/dependency/felix</felix.dependencies>
		
		<paxle.bundleDocUrl>http://wiki.paxle.net/dev/bundles</paxle.bundleDocUrl>
		<paxle.bundleUpdateUrl>http://osgi.repository.paxle.net</paxle.bundleUpdateUrl>
		
		<!-- Release information -->
		<paxle.release.number>0.1.1</paxle.release.number>		
		
		<!-- our source files are stored using UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<issueManagement>
		<system>Mantis</system>
		<url>https://bugs.pxl.li/</url>
	</issueManagement>

	<distributionManagement>
		<snapshotRepository>
			<id>paxle-snapshot-repository</id>
			<url>${mvn-deploy-url}</url>
		</snapshotRepository>

		<repository>
			<id>paxle-release-repository</id>
			<url>${mvn-deploy-url}</url>
		</repository>
		
		<site>
			<id>paxle-site</id>
			<url>${mvn-site-deploy-url}</url>
		</site>
	</distributionManagement>

	<licenses>
		<license>
			<name>CPL 1.0</name>
			<url>http://www.opensource.org/licenses/cpl1.0.txt</url>
			<distribution>repo</distribution>
			<comments>Ask if you need an alternative license.</comments>
		</license>
	</licenses>
	
	<scm>
		<url>http://svn.paxle.net/wsvn/paxle/trunk/bundles/</url>
		<developerConnection>scm:svn:svn+ssh://svn@svn.xenim.de/p2psearch/trunk/bundles/</developerConnection>
	</scm>	
	
	<build>
		<!-- Output File Name:
			The jar names should not include the version number. This is
			required for bundle update via Bundle-UpdateLocation URL
		-->
		<finalName>${project.artifactId}</finalName>	
	
		<!-- resources that should be included automatically -->
		<!--  
	        <resources>
	            <resource>
	                <directory>src/main/resources</directory>
	            </resource>
	            
	            <resource>
	                <directory>../Root/</directory>
	                <includes>
	                    <include>LICENSE.txt</include>
	                </includes>
	                <targetPath>META-INF</targetPath>
	            </resource>
	        </resources>
	        -->

		<!-- 
			Defining resources that should be included into the final jar
		 -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                	<!-- excluding language files with UTF-8 encoding  -->
                	<exclude>**/l10n/*</exclude>
                </excludes>
            </resource>
            <resource>
            	<!-- 
            		including language files with converted ASCII encoding 
            		(see native2ascii plugin) 
            	-->
            	<directory>target/native2ascii</directory>
            </resource>
        </resources>

		<!-- 
			central plugin management to set the plugin versions 
			to use by all sub-projects 
		-->
		<pluginManagement>
			<plugins>		
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.0.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-scr-plugin</artifactId>
					<version>1.4.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.0.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.0-beta-1</version>
				</plugin>	
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.2-beta-2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
		        	<groupId>com.mycila.maven-license-plugin</groupId>
		        	<artifactId>maven-license-plugin</artifactId>
		        	<version>1.6.0</version>				
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>1.0-beta-4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.3</version>
				</plugin> 
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
    				<artifactId>maven-surefire-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
    				<artifactId>maven-clean-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
    				<artifactId>maven-deploy-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
    				<artifactId>maven-install-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<!-- required maven 2.0.9 
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>			
					<version>2.5</version>
				</plugin>
				 -->
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- 
				A plugin to check if all files contains the Paxle license header
			 -->
			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<configuration>
					<header>../Paxle/LICENSE-HEADER.txt</header>
					<properties>
						<!-- Don't forget to update ../Paxle/pom.xml accordingly -->
						<inceptionYear>${project.inceptionYear}</inceptionYear>
						<year>2010</year>
					</properties>
					<includes>
						<include>**/*.java</include>
						<include>**/*.vm</include>
						<include>**/*.sh</include>
					</includes>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 
				A plugin to convert UTF-8 language files to ASCII 
			 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
				<version>1.0-alpha-2-SNAPSHOT</version>
				<executions>
					<execution>
						<goals>
							<goal>native2ascii</goal>
						</goals>
						<phase>validate</phase>
						<configuration>
							<src>${basedir}/src/main/resources/</src>
							<dest>${project.build.directory}/native2ascii</dest>
							<includes>**/l10n/*</includes>
							<excludes>*</excludes>
							<encoding>UTF8</encoding>
							<ext>.properties</ext>
							<failonerror>false</failonerror>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 
				A plugin to generate eclipse-related files for all java projects
			 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<inherited>false</inherited>

				<!--plugin configuration for the parent project -->
				<configuration>
					<!-- Workaround for http://jira.codehaus.org/browse/MECLIPSE-94 [^] -->
					<eclipseProjectDir>..</eclipseProjectDir>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<inherited>true</inherited>

				<!--plugin configuration for inherited projects -->
				<configuration>
					<downloadSources>true</downloadSources>
				</configuration>
			</plugin>

			<!-- 
				Java Compiler Plugin
				- we just support jdk 1.5 and above
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 
				A plugin to read the SVN revision number
			 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
					<revisionOnScmFailure>0</revisionOnScmFailure>
					<!-- <useLastCommittedRevision>true</useLastCommittedRevision>-->
					<!-- <getRevisionOnlyOnce>true</getRevisionOnlyOnce>-->
				</configuration>
			</plugin>
			
			<!-- 
				A plugin to build OSGi bundles
				- this configuration is just inherited to all sub-projects
			 -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<inherited>true</inherited>
				<configuration>
					<instructions>
						<Implementation-Version>${pom.version}</Implementation-Version>
						<Implementation-Build>${buildNumber}</Implementation-Build>
						<Paxle-Release>${paxle.release.number}</Paxle-Release>
					</instructions>
				</configuration>
			</plugin>
			
			<!--
				A plugin to generate OSGI DS XML files
			 -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-scr-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-scr-scrdescriptor</id>
						<goals>
							<goal>scr</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- disabling javadoc parsing -->
					<!--  <parseJavadoc>false</parseJavadoc> -->
					<processAnnotations>true</processAnnotations>
					<strictMode>true</strictMode>
					<specVersion>1.1</specVersion>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<!-- dependencies that are used multiple times -->
	<dependencyManagement>
		<dependencies>
			<!-- httpclient dependencies -->
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient-osgi</artifactId>
				<version>3.1.0.v200712051435</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.4</version>
			</dependency>
			
			<!-- ehcache dependencies -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>1.6.2</version>
			</dependency>

			<!-- jmock dependencies -->
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock</artifactId>
				<version>2.5.1</version>
			</dependency>
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-junit3</artifactId>
				<version>2.5.1</version>
			</dependency>
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-legacy</artifactId>
				<version>2.5.1</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>2.1_3</version>
			</dependency>
			<dependency>
				<groupId>org.objenesis</groupId>
				<artifactId>objenesis</artifactId>
				<version>1.0</version>
			</dependency>

			<!-- Commons Pool API -->
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>1.5.3</version>
			</dependency>
			
			<!-- Commons IO -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>1.4</version>
			</dependency>

			<!-- Commons Collections -->
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>	

			<!-- 
				Eclipse Equinox dependencies needed for compiling
			 -->
			<dependency>
				<!-- Equinox framework bundle: needed by new console-command-handlers -->
				<groupId>org.eclipse.osgi</groupId>
				<artifactId>osgi</artifactId>
				<version>3.5.1.R35x_v20090827</version>
			</dependency>

			<!--
				Annotation classes for Software defect detection 
			 -->
			<dependency>
			    <groupId>net.sourceforge.findbugs</groupId>
			    <artifactId>jsr305</artifactId>
			    <version>1.3.2</version>
			</dependency>	
			<dependency>
				<groupId>net.sourceforge.findbugs</groupId>
				<artifactId>annotations</artifactId>
				<version>1.3.2</version>
			</dependency>
			
			<!--
				Annotation for the maven-scr-plugin 
			 -->
			<dependency>
			    <groupId>org.apache.felix</groupId>
			    <artifactId>org.apache.felix.scr.annotations</artifactId>
			    <version>1.0.0</version>
			</dependency>
			
			<!-- H2 database -->
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.1.118</version>
			</dependency>	
			
			<!-- derby database -->
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>10.5.3.0_1</version>
			</dependency>
			
			<!-- javax.servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- define global dependendies -->
	<dependencies>
		<!-- OSGi API
		
			 We just use this dependency at compile time. At runtime the corresponding 
			 library of the used OSGi runtime is used.
		-->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>1.4.0</version>
		</dependency>

		<!-- 
			OSGI Compendium Classes/Interfaces
			
			We just use this dependency at compile time. At runtime the corresponding 
			library of the used OSGi runtime is used.
		 -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>1.4.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.osgi.core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.felix</groupId>
					<artifactId>org.osgi.foundation</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.felix</groupId>
					<artifactId>javax.servlet</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Commons Logging API -->
		<dependency>
			<artifactId>commons-logging</artifactId>
			<groupId>commons-logging</groupId>
			<version>1.1.1</version>
		</dependency>
		
		<!-- Junit Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		
		<!-- JUnit Addons -->
		<dependency>
			<groupId>junit-addons</groupId>
			<artifactId>junit-addons</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>		
		
		<!-- jmock dependencies -->	
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit3</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- findbugs annotations -->
		<dependency>
		    <groupId>net.sourceforge.findbugs</groupId>
		    <artifactId>jsr305</artifactId>
		</dependency>	
		<dependency>
			<groupId>net.sourceforge.findbugs</groupId>
			<artifactId>annotations</artifactId>
		</dependency>
		
		<!--
			Annotation for the maven-scr-plugin 
		 -->
		<dependency>
		    <groupId>org.apache.felix</groupId>
		    <artifactId>org.apache.felix.scr.annotations</artifactId>
		</dependency>	
	</dependencies>

	<!-- ==================================================================== -->
	<!-- DEBUG PROFILE                                                        -->
	<!-- ==================================================================== -->
	<profiles>
    	<profile>
			<id>bundle-debug-profile</id>
			<activation>
				<property>
					<name>debug</name>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<inherited>true</inherited>
						<executions>
							<execution>
								<id>make-debug-assembly</id>
								<phase>install</phase>
								<goals>
									<goal>directory-inline</goal>
								</goals>
								
								<configuration>
									<descriptors>
										<descriptor>../Root/src/main/assembly/debug.xml</descriptor>
									</descriptors>
									<outputDirectory>../</outputDirectory>
									<workDirectory>target/assembly/debug</workDirectory>	
									<finalName>/Debug</finalName>				
									<ignoreDirFormatExtensions>true</ignoreDirFormatExtensions>	
									<appendAssemblyId>false</appendAssemblyId>
								</configuration>								
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

    	<!-- ==================================================================== -->
		<!-- ONLINE TESTS                                                         -->
		<!-- online tests are skipped per default                                 -->
		<!-- ==================================================================== -->
    	<profile>
    		<id>skip-onlinetests-profile</id>
			<activation>
				<property>
					<name>!maven.test.online</name>
				</property>
			</activation>    	
    	
    		<build>
    			<plugins>
    				<plugin>
    					<groupId>org.apache.maven.plugins</groupId>
    					<artifactId>maven-surefire-plugin</artifactId>
    					<configuration>
				          <excludes>
				            <exclude>**/*OnlineTest.java</exclude>
				          </excludes>
    					</configuration>
    				</plugin>
    			</plugins>
    		</build>
    	</profile>


    	<!-- ==================================================================== -->
		<!-- WEBINSTALLER PROFILE                                                 -->
		<!-- ==================================================================== -->
		<profile>
			<id>webinstaller-profile</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>webinstaller</name>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>webinstaller-enforce-property</id>
								<phase>validate</phase>
								<goals><goal>enforce</goal></goals>
								<configuration>
									<rules>
										<requireProperty>
											<property>webinstallerURL</property>
											<message>"Webinstaller Download-URL is missing. e.g. -DwebinstallerURL=http://snapshots.mvn.repos.pxl.li/webinstaller/"</message>
										</requireProperty>
										<requireProperty>
											<property>webinstallerUploadURL</property>
											<message>"Webinstaller Upload-URL is missing. e.g. -DwebinstallerUploadURL=file:///home/user/temp/webinstaller"</message>
										</requireProperty>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<inherited>true</inherited>
						<executions>
							<execution>
								<id>webinstaller-assembly</id>
								<phase>install</phase>
								<goals>
									<goal>directory-inline</goal>
								</goals>
								
								<configuration>
									<!-- try to find an asselby descriptor but don't fail if missing -->
									<ignoreMissingDescriptor>true</ignoreMissingDescriptor>
									<descriptors>
										<descriptor>src/main/assembly/webinstaller.xml</descriptor>
									</descriptors>
									
									<!-- copy files to  Paxle/target/installer/ -->
									<outputDirectory>${project.build.directory}</outputDirectory>
									<finalName>/webinstaller/</finalName>
									<ignoreDirFormatExtensions>true</ignoreDirFormatExtensions>	
									<appendAssemblyId>false</appendAssemblyId>							
		
									<!-- temp woring dir -->
									<workDirectory>target/assembly/webinstaller</workDirectory>					
								</configuration>								
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
