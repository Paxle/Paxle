#*
 * This file is part of the Paxle project.
 * Visit http://www.paxle.net for more information.
 * Copyright 2007-2009 the original author or authors.
 *
 * Licensed under the terms of the Common Public License 1.0 ("CPL 1.0").
 * Any use, reproduction or distribution of this program constitutes the recipient's acceptance of this agreement.
 * The full license text is available under http://www.opensource.org/licenses/cpl1.0.txt
 * or in the file LICENSE.txt in the root directory of the Paxle distribution.
 *
 * Unless required by applicable law or agreed to in writing, this software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *#
## getting resourcebundle to translate site
#set( $text = $resourceTool.bundle('OSGI-INF/l10n/logview'))
#if($type && $type == "plain")
#foreach($logEntry in ${logReader.getLog()})
#set($level = ${logEntry.getLevel()})
#set($dateFormat = ${text.logmsg.time.format})
#if( $level <= $filterLogLevel)
#set($levelName = $logLevelNames.get($level))
$dateTool.format("$dateFormat",$logEntry.getTime()) $text.get("loglevel.$levelName") - $logEntry.getMessage()#if($logEntry.getException()) $logView.toString($logEntry.getException())#end

#end
#end
#else
    ## Set the page title
    #set( $page_title = ${text.browser.title} )
    
    ## Add custom html headers
    #set( $h1 = "<script src='/js/prototype.js' type='text/javascript'></script>")
    #set( $h2 = "<script src='/js/scriptaculous.js' type='text/javascript'></script>")	
	#set($page_headers = [$h1,$h2])
	
    ## the regular content
    <h2>${text.page.title}</h2>
    #if($logReader)
    <form class="filter" action="">
    	<select name="filterLogLevel">
    		<option value="1" #if($filterLogLevel == 1)selected="selected"#end>${text.loglevel.error}</option>
    		<option value="2" #if($filterLogLevel == 2)selected="selected"#end>${text.loglevel.warn}</option>
    		<option value="3" #if($filterLogLevel == 3)selected="selected"#end>${text.loglevel.info}</option>
    		<option value="4" #if($filterLogLevel == 4)selected="selected"#end>${text.loglevel.debug}</option>
    	</select>
    	<select name="logType">
    		<option value="log4j" #if($logType == "log4j")selected="selected"#end>log4j</option>
    		<option value="osgi" #if($logType == "osgi")selected="selected"#end>OSGI</option>
    	</select>
    	<select name="type">
    		<option value="default" #if(!$type || $type == "default")selected="selected"#end>${text.logtype.default}</option>
    		<option value="plain" #if($type && $type == "plain")selected="selected"#end>${text.logtype.plain}</option>
    	</select>
    	<input type="submit" value="${text.apply}" />
    </form>
    
    ## displaying statistics
    #set($logData = ${logReader.getLogData()})
    <div class="summary">
    ${text.summary.title}&nbsp;|&nbsp;
    #foreach($statsEntry in ${logData.getStatistics().entrySet()})
        #set($levelName = $logLevelNames.get($statsEntry.key))
        #set($levelText = $text.get("loglevel.$levelName"))
        <div class="log$levelName" titel="$levelText">
			<input type="checkbox" checked="checked" onClick="checked ? Effect.multiple($$('tr.row_log$levelName'),Effect.Appear, { speed: 0 }) : Effect.multiple($$('tr.row_log$levelName'),Effect.Fade, { speed: 0 })"/>
			$statsEntry.value
		</div>&nbsp;|&nbsp;
    #end
    </div>
    
    ## displaying log messages
    <table>
    	<tr>
    		<th>${text.logmsg.level}</th>
    		<th>${text.logmsg.time}</th>
    		<th>${text.logmsg.text}</th>
    	</tr>
    	#foreach($logEntry in ${logData.getLog()})
    		## $logReader.getLog())
        	#set($level = ${logEntry.getLevel()})
    		#set($dateFormat = ${text.logmsg.time.format})
    		
        	#if( $level <= $filterLogLevel)
            	#set($levelName = $logLevelNames.get($level))
            	<tr  class="row_log$levelName">
            		<td class="log$levelName">$text.get("loglevel.$levelName")</td>
            		<td class="logDate">$dateTool.format("$dateFormat",$logEntry.getTime())</td>
            		<td class="logMessage">$escTool.html($logEntry.getMessage()).replaceAll("\n", "\n<br />")#if( $logEntry.getException())<div class="exception">$logView.toString($logEntry.getException())</div>#end</td>
            	</tr>
        	#end
    	#end
    </table>
    #else
    <p class="error bundleNotInstalled">${text.error.noLogReaderService}</p>
    #end
#end
